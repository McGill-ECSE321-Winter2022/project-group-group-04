// Generated by view binder compiler. Do not edit!
package ca.mcgill.ecse321.project321.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ca.mcgill.ecse321.project321.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText emailinput;

  @NonNull
  public final TextView loginerror;

  @NonNull
  public final EditText passwordinput;

  @NonNull
  public final Button signinbutton;

  @NonNull
  public final TextView signintitle;

  @NonNull
  public final TextView signupredirectclickable;

  @NonNull
  public final TextView signupredirecttext;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText emailinput,
      @NonNull TextView loginerror, @NonNull EditText passwordinput, @NonNull Button signinbutton,
      @NonNull TextView signintitle, @NonNull TextView signupredirectclickable,
      @NonNull TextView signupredirecttext) {
    this.rootView = rootView;
    this.emailinput = emailinput;
    this.loginerror = loginerror;
    this.passwordinput = passwordinput;
    this.signinbutton = signinbutton;
    this.signintitle = signintitle;
    this.signupredirectclickable = signupredirectclickable;
    this.signupredirecttext = signupredirecttext;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailinput;
      EditText emailinput = ViewBindings.findChildViewById(rootView, id);
      if (emailinput == null) {
        break missingId;
      }

      id = R.id.loginerror;
      TextView loginerror = ViewBindings.findChildViewById(rootView, id);
      if (loginerror == null) {
        break missingId;
      }

      id = R.id.passwordinput;
      EditText passwordinput = ViewBindings.findChildViewById(rootView, id);
      if (passwordinput == null) {
        break missingId;
      }

      id = R.id.signinbutton;
      Button signinbutton = ViewBindings.findChildViewById(rootView, id);
      if (signinbutton == null) {
        break missingId;
      }

      id = R.id.signintitle;
      TextView signintitle = ViewBindings.findChildViewById(rootView, id);
      if (signintitle == null) {
        break missingId;
      }

      id = R.id.signupredirectclickable;
      TextView signupredirectclickable = ViewBindings.findChildViewById(rootView, id);
      if (signupredirectclickable == null) {
        break missingId;
      }

      id = R.id.signupredirecttext;
      TextView signupredirecttext = ViewBindings.findChildViewById(rootView, id);
      if (signupredirecttext == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, emailinput, loginerror, passwordinput,
          signinbutton, signintitle, signupredirectclickable, signupredirecttext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package ca.mcgill.ecse321.project321.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ca.mcgill.ecse321.project321.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AccountInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView accountinfoerror;

  @NonNull
  public final TextView addressinfotitle;

  @NonNull
  public final TextView currentusername;

  @NonNull
  public final TextView edittitle;

  @NonNull
  public final LinearLayout existinginfo;

  @NonNull
  public final EditText postalcodeinputupdate;

  @NonNull
  public final EditText streetinputupdate;

  @NonNull
  public final TextView title;

  @NonNull
  public final EditText towninputupdate;

  @NonNull
  public final EditText unitinputupdate;

  @NonNull
  public final Button updatebutton;

  @NonNull
  public final TextView useremail;

  @NonNull
  public final TextView userphone;

  @NonNull
  public final TextView userpostcode;

  @NonNull
  public final TextView userstreet;

  @NonNull
  public final TextView usertown;

  @NonNull
  public final TextView userunit;

  private AccountInfoBinding(@NonNull ConstraintLayout rootView, @NonNull TextView accountinfoerror,
      @NonNull TextView addressinfotitle, @NonNull TextView currentusername,
      @NonNull TextView edittitle, @NonNull LinearLayout existinginfo,
      @NonNull EditText postalcodeinputupdate, @NonNull EditText streetinputupdate,
      @NonNull TextView title, @NonNull EditText towninputupdate, @NonNull EditText unitinputupdate,
      @NonNull Button updatebutton, @NonNull TextView useremail, @NonNull TextView userphone,
      @NonNull TextView userpostcode, @NonNull TextView userstreet, @NonNull TextView usertown,
      @NonNull TextView userunit) {
    this.rootView = rootView;
    this.accountinfoerror = accountinfoerror;
    this.addressinfotitle = addressinfotitle;
    this.currentusername = currentusername;
    this.edittitle = edittitle;
    this.existinginfo = existinginfo;
    this.postalcodeinputupdate = postalcodeinputupdate;
    this.streetinputupdate = streetinputupdate;
    this.title = title;
    this.towninputupdate = towninputupdate;
    this.unitinputupdate = unitinputupdate;
    this.updatebutton = updatebutton;
    this.useremail = useremail;
    this.userphone = userphone;
    this.userpostcode = userpostcode;
    this.userstreet = userstreet;
    this.usertown = usertown;
    this.userunit = userunit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AccountInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AccountInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.account_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AccountInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountinfoerror;
      TextView accountinfoerror = ViewBindings.findChildViewById(rootView, id);
      if (accountinfoerror == null) {
        break missingId;
      }

      id = R.id.addressinfotitle;
      TextView addressinfotitle = ViewBindings.findChildViewById(rootView, id);
      if (addressinfotitle == null) {
        break missingId;
      }

      id = R.id.currentusername;
      TextView currentusername = ViewBindings.findChildViewById(rootView, id);
      if (currentusername == null) {
        break missingId;
      }

      id = R.id.edittitle;
      TextView edittitle = ViewBindings.findChildViewById(rootView, id);
      if (edittitle == null) {
        break missingId;
      }

      id = R.id.existinginfo;
      LinearLayout existinginfo = ViewBindings.findChildViewById(rootView, id);
      if (existinginfo == null) {
        break missingId;
      }

      id = R.id.postalcodeinputupdate;
      EditText postalcodeinputupdate = ViewBindings.findChildViewById(rootView, id);
      if (postalcodeinputupdate == null) {
        break missingId;
      }

      id = R.id.streetinputupdate;
      EditText streetinputupdate = ViewBindings.findChildViewById(rootView, id);
      if (streetinputupdate == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.towninputupdate;
      EditText towninputupdate = ViewBindings.findChildViewById(rootView, id);
      if (towninputupdate == null) {
        break missingId;
      }

      id = R.id.unitinputupdate;
      EditText unitinputupdate = ViewBindings.findChildViewById(rootView, id);
      if (unitinputupdate == null) {
        break missingId;
      }

      id = R.id.updatebutton;
      Button updatebutton = ViewBindings.findChildViewById(rootView, id);
      if (updatebutton == null) {
        break missingId;
      }

      id = R.id.useremail;
      TextView useremail = ViewBindings.findChildViewById(rootView, id);
      if (useremail == null) {
        break missingId;
      }

      id = R.id.userphone;
      TextView userphone = ViewBindings.findChildViewById(rootView, id);
      if (userphone == null) {
        break missingId;
      }

      id = R.id.userpostcode;
      TextView userpostcode = ViewBindings.findChildViewById(rootView, id);
      if (userpostcode == null) {
        break missingId;
      }

      id = R.id.userstreet;
      TextView userstreet = ViewBindings.findChildViewById(rootView, id);
      if (userstreet == null) {
        break missingId;
      }

      id = R.id.usertown;
      TextView usertown = ViewBindings.findChildViewById(rootView, id);
      if (usertown == null) {
        break missingId;
      }

      id = R.id.userunit;
      TextView userunit = ViewBindings.findChildViewById(rootView, id);
      if (userunit == null) {
        break missingId;
      }

      return new AccountInfoBinding((ConstraintLayout) rootView, accountinfoerror, addressinfotitle,
          currentusername, edittitle, existinginfo, postalcodeinputupdate, streetinputupdate, title,
          towninputupdate, unitinputupdate, updatebutton, useremail, userphone, userpostcode,
          userstreet, usertown, userunit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package ca.mcgill.ecse321.project321.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ca.mcgill.ecse321.project321.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StoreInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout infoblock;

  @NonNull
  public final TextView storeaddress;

  @NonNull
  public final TextView storeclosing;

  @NonNull
  public final TextView storeemail;

  @NonNull
  public final TextView storeinfoerror;

  @NonNull
  public final TextView storeopening;

  @NonNull
  public final TextView storeoutoftownfee;

  @NonNull
  public final TextView storephone;

  @NonNull
  public final TextView title;

  private StoreInfoBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout infoblock,
      @NonNull TextView storeaddress, @NonNull TextView storeclosing, @NonNull TextView storeemail,
      @NonNull TextView storeinfoerror, @NonNull TextView storeopening,
      @NonNull TextView storeoutoftownfee, @NonNull TextView storephone, @NonNull TextView title) {
    this.rootView = rootView;
    this.infoblock = infoblock;
    this.storeaddress = storeaddress;
    this.storeclosing = storeclosing;
    this.storeemail = storeemail;
    this.storeinfoerror = storeinfoerror;
    this.storeopening = storeopening;
    this.storeoutoftownfee = storeoutoftownfee;
    this.storephone = storephone;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StoreInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StoreInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.store_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StoreInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.infoblock;
      LinearLayout infoblock = ViewBindings.findChildViewById(rootView, id);
      if (infoblock == null) {
        break missingId;
      }

      id = R.id.storeaddress;
      TextView storeaddress = ViewBindings.findChildViewById(rootView, id);
      if (storeaddress == null) {
        break missingId;
      }

      id = R.id.storeclosing;
      TextView storeclosing = ViewBindings.findChildViewById(rootView, id);
      if (storeclosing == null) {
        break missingId;
      }

      id = R.id.storeemail;
      TextView storeemail = ViewBindings.findChildViewById(rootView, id);
      if (storeemail == null) {
        break missingId;
      }

      id = R.id.storeinfoerror;
      TextView storeinfoerror = ViewBindings.findChildViewById(rootView, id);
      if (storeinfoerror == null) {
        break missingId;
      }

      id = R.id.storeopening;
      TextView storeopening = ViewBindings.findChildViewById(rootView, id);
      if (storeopening == null) {
        break missingId;
      }

      id = R.id.storeoutoftownfee;
      TextView storeoutoftownfee = ViewBindings.findChildViewById(rootView, id);
      if (storeoutoftownfee == null) {
        break missingId;
      }

      id = R.id.storephone;
      TextView storephone = ViewBindings.findChildViewById(rootView, id);
      if (storephone == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new StoreInfoBinding((ConstraintLayout) rootView, infoblock, storeaddress,
          storeclosing, storeemail, storeinfoerror, storeopening, storeoutoftownfee, storephone,
          title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

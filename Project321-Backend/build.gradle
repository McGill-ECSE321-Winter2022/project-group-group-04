plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'ca.mcgill.ecse321'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.mockito:mockito-core:2.+'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.18.3'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
	testImplementation 'org.junit.platform:junit-platform-launcher:1.4.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

task integrationTestExecution() {
	exec {
		workingDir 'src/test/integration'
		if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    		commandLine 'cmd.exe' ,'@cmd' , '/k', 'integrationTest.bat'
		} else {
    		commandLine './integrationTest.sh'
		}
	}
}

task integrationTests(type:Test) {
	dependsOn integrationTestExecution
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.01 // Temporary
			}
		}
	}
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
		html.enabled = true
        html.destination file("${buildDir}/jacocoHtml") 
    }
}

test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}